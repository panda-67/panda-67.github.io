{"version":3,"file":"component---src-templates-blog-tags-js-f6bfc45c71ec02966228.js","mappings":"gKAaA,IATiB,SAAC,GAAD,IAAGA,EAAH,EAAGA,IAAH,OACf,uBAAKC,IAAKD,EAAIE,WAAYC,UAAU,6BAClC,gBAAC,EAAAC,KAAD,CAAMC,GAAE,SAAW,IAAYL,EAAIE,YAA3B,KACL,IAAYF,EAAIE,YACjB,wBAAMC,UAAU,2FAA2FH,EAAIM,aAJpG,C,mHCwFjB,UApFiB,SAAC,GAST,IAAD,IAPJC,KACeC,EAMX,EANFC,UAAaD,MACbE,EAKE,EALFA,kBACAC,EAIE,EAJFA,KACAC,EAGE,EAHFA,gBAIIZ,EADF,EADJa,YAEMb,IACAc,EAAsBJ,EAAtBI,MAAOR,EAAeI,EAAfJ,WACTS,EAAOP,EACVQ,KAAI,SAAAhB,GAAG,OAAI,gBAAC,IAAD,CAAUC,IAAKD,EAAIE,WAAYF,IAAKA,GAAxC,IAGV,OACE,2BACE,uBAAKG,UAAU,iBACb,gBAAC,IAAD,CAAQc,UAAWN,EAAKO,KAAKD,UAAWE,WAAYP,EAAgBQ,QACpE,sBAAIjB,UAAU,sDACZ,uBAAKA,UAAU,wBAA2BG,EAA1C,SAA2E,IAAfA,EAAmB,GAAK,MACpF,2CAAsB,IAAaN,GAAnC,MAEF,uBAAKG,UAAU,6BACZW,EAAME,KAAI,YAAe,IAAZK,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAE,EAAYH,EAAZG,QACR,EAAwBH,EAAKI,YAArBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACf,OACE,uBAAK1B,IAAKqB,EAAMnB,UAAU,mDACxB,gBAAC,EAAAC,KAAD,CAAMC,GAAE,QAAUiB,GAChB,sBAAInB,UAAU,4CAA4CuB,IAE5D,0BAAKC,GACL,yBAAIH,GAGT,MAGL,uBAAKrB,UAAU,oCACb,gBAAC,EAAAC,KAAD,CAAMC,GAAG,SACP,uBAAKF,UAAU,mGAAf,cAIF,uBAAKA,UAAU,gFACb,0BAAI,2CACJ,uBAAKA,UAAU,iBACZY,KAIP,2BACE,gBAAC,IAAD,CAAQa,QAASjB,EAAKO,KAAKU,QAASC,UAAWlB,EAAKO,KAAKQ,SAIhE,C,uBCnED,IAAII,EAAW,EAAQ,MACnBC,EAAa,EAAQ,MAqBzBC,EAAOC,QAJP,SAAoBC,GAClB,OAAOH,EAAWD,EAASI,GAAQC,cACrC,C,uBCpBA,IAuBIC,EAvBmB,EAAQ,KAuBfC,EAAiB,SAASC,EAAQC,EAAMnB,GACtD,OAAOkB,GAAUlB,EAAQ,IAAM,IAAMmB,EAAKJ,aAC5C,IAEAH,EAAOC,QAAUG,C","sources":["webpack://myfol/./src/components/tags-link.js","webpack://myfol/./src/templates/blog-tags.js","webpack://myfol/./node_modules/lodash/capitalize.js","webpack://myfol/./node_modules/lodash/kebabCase.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport _ from \"lodash\"\n\nconst TagsLink = ({ tag }) => (\n  <div key={tag.fieldValue} className=\"link-primary text-neutral\">\n    <Link to={`/tags/${_.kebabCase(tag.fieldValue)}/`} >\n      {_.startCase(tag.fieldValue)}\n      <span className=\"badge bg-amber-300 border-amber-300 text-gray-800 transform -translate-y-1 text-xs ml-1\">{tag.totalCount}</span>\n    </Link>\n  </div>\n)\n\nexport default TagsLink","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\nimport _ from \"lodash\"\nimport Navbar from \"../components/navbar\"\nimport Footer from \"../components/footer\"\nimport TagsLink from \"../components/tags-link\"\n\nconst BlogTags = (\n  {\n    data: {\n      tagsPosts: { group },\n      allMarkdownRemark,\n      site,\n      siteSearchIndex\n    },\n    pageContext,\n  }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = allMarkdownRemark\n  const Tags = group\n    .map(tag => <TagsLink key={tag.fieldValue} tag={tag} />)\n  // const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`\n\n  return (\n    <div>\n      <div className=\"mx-4 lg:mx-16\">\n        <Navbar menuLinks={site.meta.menuLinks} searchData={siteSearchIndex.index} />\n        <h4 className=\"flex justify-center gap-2 text-lg lg:text-2xl mb-6\">\n          <div className=\"italic font-semibold\">{`${totalCount} Post${totalCount === 1 ? \"\" : \"s\"}`}</div>\n          <div>{`tagged with \"${_.capitalize(tag)}\"`}</div>\n        </h4>\n        <div className=\"grid md:grid-cols-2 gap-2\">\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { excerpt } = node\n            const { title, date } = node.frontmatter\n            return (\n              <div key={slug} className=\"p-4 rounded-lg border border-gray-300 shadow-lg\">\n                <Link to={`/blog${slug}`}>\n                  <h3 className=\"mb-2 leading-5 text-neutral link-primary\">{title}</h3>\n                </Link>\n                <h5>{date}</h5>\n                <p>{excerpt}</p>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      <div className=\"lg:mx-10 my-8 px-6 lg:flex gap-4\">\n        <Link to=\"/blog\">\n          <div className=\"w-full font-semibold rounded-lg bg-gray-200 hover:bg-gray-600 hover:text-gray-100 shadow-lg p-4\">\n            All Posts\n          </div>\n        </Link>\n        <div className=\"lg:flex items-center gap-4 rounded-lg bg-gray-200 shadow-lg p-4 mt-2 lg:mt-0\">\n          <h4><strong>All Tags</strong></h4>\n          <div className=\"lg:flex gap-2\">\n            {Tags}\n          </div>\n        </div>\n      </div>\n      <div>\n        <Footer socials={site.meta.socials} siteTitle={site.meta.title} />\n      </div>\n    </div>\n  )\n}\n\nBlogTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default BlogTags\n\nexport const tagQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 250)\n          frontmatter {\n            title\n            date(formatString: \"dddd, Do MMMM YYYY\", locale: \"id-ID\")\n            tags\n          }\n        }\n      }\n    }\n    tagsPosts: allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n    site {\n      meta: siteMetadata {       \n        menuLinks {\n          name\n          link\n        }\n        socials {\n          name\n          url\n        }\n      }\n    }\n    siteSearchIndex {\n      index\n    }\n  }\n`","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["tag","key","fieldValue","className","Link","to","totalCount","data","group","tagsPosts","allMarkdownRemark","site","siteSearchIndex","pageContext","edges","Tags","map","menuLinks","meta","searchData","index","node","slug","fields","excerpt","frontmatter","title","date","socials","siteTitle","toString","upperFirst","module","exports","string","toLowerCase","kebabCase","createCompounder","result","word"],"sourceRoot":""}