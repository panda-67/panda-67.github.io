{"version":3,"file":"component---src-templates-blog-tags-js-84f69ca7fdd8b8aeaa89.js","mappings":"+JAqEA,UA/Da,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WAGf,OACE,2BACE,uBAAKC,UAAU,iBACb,gBAAC,IAAD,MACA,sBAAIA,UAAU,sDACZ,uBAAKA,UAAU,wBAA2BD,EAA1C,SAA2E,IAAfA,EAAmB,GAAK,MACpF,2CAAsB,IAAaH,GAAnC,MAEF,uBAAKI,UAAU,6BACZF,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAE,EAAYH,EAAZG,QACR,EAAwBH,EAAKI,YAArBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACf,OACE,uBAAKC,IAAKN,EAAMH,UAAU,mDACxB,gBAAC,EAAAU,KAAD,CAAMC,GAAE,QAAUR,GAChB,sBAAIH,UAAU,4CAA4CO,IAE5D,0BAAKC,GACL,yBAAIH,GAGT,KAEH,uBAAKL,UAAU,uGACb,gBAAC,EAAAU,KAAD,CAAMC,GAAG,UAAT,eAGJ,uBAAKX,UAAU,aACb,uBAAKA,UAAU,8CAAf,0BAIP,C,uBC5CD,IAAIY,EAAW,EAAQ,MACnBC,EAAa,EAAQ,MAqBzBC,EAAOC,QAJP,SAAoBC,GAClB,OAAOH,EAAWD,EAASI,GAAQC,cACrC,C","sources":["webpack://myfol/./src/templates/blog-tags.js","webpack://myfol/./node_modules/lodash/capitalize.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\nimport _ from \"lodash\"\nimport Navbar from \"../components/blog-nav\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  // const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`\n\n  return (\n    <div>\n      <div className=\"mx-4 lg:mx-16\">\n        <Navbar />\n        <h4 className=\"flex justify-center gap-2 text-lg lg:text-2xl mb-6\">\n          <div className=\"italic font-semibold\">{`${totalCount} Post${totalCount === 1 ? \"\" : \"s\"}`}</div>\n          <div>{`tagged with \"${_.capitalize(tag)}\"`}</div>\n        </h4>\n        <div className=\"grid md:grid-cols-2 gap-2\">\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { excerpt } = node\n            const { title, date } = node.frontmatter\n            return (\n              <div key={slug} className=\"p-4 rounded-lg border border-gray-300 shadow-lg\">\n                <Link to={`/blog${slug}`}>\n                  <h3 className=\"mb-2 leading-5 text-neutral link-primary\">{title}</h3>\n                </Link>\n                <h5>{date}</h5>\n                <p>{excerpt}</p>\n              </div>\n            )\n          })}\n        </div>\n        <div className=\"font-semibold rounded-lg bg-gray-200 hover:bg-gray-600 hover:text-gray-100 shadow-lg p-4 w-max mt-4\">\n          <Link to=\"/blogs\">All Posts</Link>\n        </div>\n      </div>\n      <div className=\"mt-8 py-2\">\n        <div className=\"col-span-6 flex justify-center w-full mb-4\">Â© 2022 Samsul Muarrif</div>\n      </div>\n    </div>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 250)\n          frontmatter {\n            title\n            date(formatString: \"dddd, Do MMMM YYYY\", locale: \"id-ID\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n"],"names":["pageContext","data","tag","allMarkdownRemark","edges","totalCount","className","map","node","slug","fields","excerpt","frontmatter","title","date","key","Link","to","toString","upperFirst","module","exports","string","toLowerCase"],"sourceRoot":""}