{"version":3,"file":"component---src-pages-blogs-js-e9eda14ff0bc3f855799.js","mappings":"qKAIe,SAASA,IACtB,OACE,uBAAKC,UAAU,oCACb,uBAAKA,UAAU,sBACb,uBAAKA,UAAU,IACb,gBAAC,EAAAC,KAAD,CAAMC,GAAG,IAAIF,UAAU,QACrB,gBAAC,EAAAG,EAAD,CACEC,IAAI,qBACJC,MAAM,UACNC,IAAI,UACJC,OAAQ,GAJV,wBAOJ,uBAAKP,UAAU,oDACb,sBAAIA,UAAU,+CACZ,0BAAI,gBAAC,EAAAC,KAAD,CAAMC,GAAG,UAAT,UACJ,0BAAI,gBAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,WAEN,uBAAKF,UAAU,gBACb,yBAAOQ,KAAK,OAAOC,YAAY,SAAST,UAAU,qCAIxD,uBAAKA,UAAU,oCACb,0BAAQU,SAAU,IAAKV,UAAU,QAC/B,uBAAKW,MAAM,6BAA6BX,UAAU,UAAUY,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAAe,wBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,6BAEzL,0BAAQR,SAAU,IAAKV,UAAU,mFAC/B,uBAAKA,UAAU,uBACb,yBAAOQ,KAAK,OAAOC,YAAY,SAAST,UAAU,mCAEpD,0BAAI,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,SACJ,0BAAI,gBAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,UACJ,0BAAI,gBAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,YAKb,C,4FCtBD,EAjBiB,SAAC,GAAD,IAAGiB,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACf,uBAAKpB,UAAU,oCACb,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAE,QAAUiB,EAAKE,OAAOC,MAC3BH,EAAKI,YAAYlB,QAGtB,uBAAKL,UAAU,cACb,qBAAGA,UAAU,sBAAb,MAAsCoB,GACtC,6BAAQD,EAAKI,YAAYC,OAE3B,2BACGL,EAAKM,SAZK,E,oBCkCjB,EA/BkB,SAAC,GAMV,IAAD,IAJJC,KACuBC,EAGnB,EAHFC,kBAAqBD,MAGnB,IAFFE,KAAQC,aAAgBzB,EAEtB,EAFsBA,MAAOe,EAE7B,EAF6BA,OAAQW,EAErC,EAFqCA,KAGrCC,EAAQL,EACXM,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKZ,YAAYC,IAA5B,IACXY,KAAI,SAAAF,GAAI,OAAI,gBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAInB,KAAMe,EAAKC,KAAMf,OAAQA,GAA1D,IAEX,OACE,2BACE,gBAACmB,EAAA,EAAD,CACElC,MAAK,WAAaA,EAClBmC,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAYX,EAAL,OAAgBX,GAC9C,CAAEqB,KAAM,WAAYC,QAAS,gEAIjC,uBAAK1C,UAAU,iBACb,gBAAC,IAAD,OAEF,uBAAKA,UAAU,+BACZgC,GAIR,C","sources":["webpack://myfol/./src/components/blog-nav.js","webpack://myfol/./src/components/post-link.js","webpack://myfol/./src/pages/blogs.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nexport default function Navbar() {\n  return (\n    <div className=\"flex justify-between bg-base-100\">\n      <div className=\"navbar bg-base-100\">\n        <div className=\"\">\n          <Link to=\"/\" className=\"px-2\">\n            <StaticImage\n              src=\"../images/icon.svg\"\n              title=\"Welcome\"\n              alt=\"profile\"\n              height={40} />\n          </Link>\n        </div>\n        <div className=\"hidden lg:flex gap-2 justify-between w-full pt-2\">\n          <ul className=\"menu menu-compact menu-horizontal gap-1 p-0\">\n            <li><Link to=\"/about\">About</Link></li>\n            <li><Link to=\"/blogs\">Blogs</Link></li>\n          </ul>\n          <div className=\"form-control\">\n            <input type=\"text\" placeholder=\"Search\" className=\"input input-sm input-bordered\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"dropdown dropdown-left lg:hidden\">\n        <button tabIndex={\"0\"} className=\"mt-4\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h7\" /></svg>\n        </button>\n        <button tabIndex={\"0\"} className=\"menu menu-compact dropdown-content mt-6 p-2 shadow bg-base-100 rounded-box w-44\">\n          <div className=\"form-control w-auto\">\n            <input type=\"text\" placeholder=\"Search\" className=\"input input-sm input-bordered\" />\n          </div>\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/about\">About</Link></li>\n          <li><Link to=\"/blogs\">Blogs</Link></li>\n        </button>\n      </div>\n    </div>\n  )\n}","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post, author }) => (\n  <div className=\"my-4 flex flex-col justify-start\">\n    <h3>\n      <Link to={`/blog${post.fields.slug}`}>\n        {post.frontmatter.title}\n      </Link>\n    </h3>\n    <div className=\"flex gap-2\">\n      <p className=\"font-edu text-base\">By {author}</p>\n      <small>{post.frontmatter.date}</small>\n    </div>\n    <div>\n      {post.excerpt}\n    </div>\n  </div>\n)\n\nexport default PostLink","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PostLink from \"../components/post-link\"\nimport Navbar from \"../components/blog-nav\"\nimport { Helmet } from \"react-helmet\"\n\nconst IndexBlog = (\n  {\n    data: {\n      allMarkdownRemark: { edges },\n      site: { siteMetadata: { title, author, desc } }\n    },\n  }) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} author={author}/>)\n\n  return (\n    <div>\n      <Helmet\n        title={`Blogs | ${title}`}\n        meta={[\n          { name: 'description', content: `${desc} by ${author}` },\n          { name: 'keywords', content: 'blog, travel, hobby, daliy, activity, coding, photography' },\n        ]}\n      >\n      </Helmet>\n      <div className=\"mx-8 lg:mx-16\">\n        <Navbar />\n      </div>\n      <div className=\"mx-8 lg:mx-14 lg:px-6 mt-12\">\n        {Posts}\n      </div>\n    </div>\n  )\n}\n\nexport default IndexBlog\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"dddd, Do MMMM YYYY\", locale: \"id-ID\")            \n            title\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        author\n        desc\n      }\n    }\n  }\n`"],"names":["Navbar","className","Link","to","S","src","title","alt","height","type","placeholder","tabIndex","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","post","author","fields","slug","frontmatter","date","excerpt","data","edges","allMarkdownRemark","site","siteMetadata","desc","Posts","filter","edge","node","map","key","id","Helmet","meta","name","content"],"sourceRoot":""}