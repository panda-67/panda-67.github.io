{"version":3,"file":"component---src-templates-blog-post-js-6b8ff15090c4c2cec54f.js","mappings":"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","sources":["webpack://myfol/./src/components/tags-link.js","webpack://myfol/./src/components/side-post.js","webpack://myfol/./src/templates/blog-post.js","webpack://myfol/./node_modules/lodash/kebabCase.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport _ from \"lodash\"\n\nconst TagsLink = ({ tag }) => (\n  <div key={tag.fieldValue} className=\"link-primary text-neutral\">\n    <Link to={`/tags/${_.kebabCase(tag.fieldValue)}/`} >\n      {_.startCase(tag.fieldValue)}\n      <span className=\"badge bg-amber-300 border-amber-300 text-gray-800 transform -translate-y-1 text-xs ml-1\">{tag.totalCount}</span>\n    </Link>\n  </div>\n)\n\nexport default TagsLink","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst SidePost = ({ post }) => (\n  <div className=\"my-4 flex flex-col justify-start\">\n    <h4 className=\"link-primary text-neutral font-semibold\">\n      <Link to={`/blog${post.fields.slug}`}>\n        {post.frontmatter.title}\n      </Link>\n    </h4>\n    <small>{post.frontmatter.date}</small>\n    <p>{post.excerpt}</p> \n  </div>\n)\n\nexport default SidePost","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport PropTypes from \"prop-types\"\nimport _ from \"lodash\"\nimport Navbar from \"../components/navbar\"\nimport SidePost from \"../components/side-post\"\nimport TagsLink from \"../components/tags-link\"\n\nconst BlogPost = (\n  {\n    data: {\n      recentPosts: { edges },\n      tagsPosts: { group },\n      site: { meta },\n      markdownRemark: { frontmatter, html, excerpt }\n    },\n    pageContext: { previous, next }\n  }) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <SidePost key={edge.node.id} post={edge.node} />)\n  const Tags = group\n    .map(tag => <TagsLink key={tag.fieldValue} tag={tag} />)\n\n  return (\n    <div>\n      <Helmet\n        title={(`Blogs | `) + frontmatter.title + (` | `) + meta.title}\n        meta={[\n          { name: 'description', content: excerpt },\n          { name: 'keywords', content: frontmatter.tags },\n        ]}\n      >\n      </Helmet>\n      <div className=\"mx-4 lg:mx-16\">\n        <Navbar />\n      </div>\n      <div className=\"mx-4 lg:mx-16 mt-4 lg:grid grid-cols-10 gap-6\">\n\n        <div className=\"col-span-8 flex flex-col-reverse lg:grid grid-cols-8 gap-6\">\n          {/* Left Sidebar */}\n          <div className=\"col-span-2 mx-2 mt-8 lg:mt-0\">\n            <h3>Recent Post</h3>\n            <div>\n              {Posts}\n            </div>\n          </div>\n\n          {/* Post */}\n          <div className=\"col-span-6 shadow-lg border p-4 rounded-lg\">\n            <div className=\"flex flex-col\">\n              <div>\n                {/* Head */}\n                <div className=\"mb-4 px-2 mx-2 pb-6 pt-2 lg:pt-6 border-b border-slate-300 flex gap-4 flex-col lg:flex-row-reverse lg:justify-end\">\n                  <div className=\"flex flex-col lg:items-end w-full\">\n                    <h3 className=\"lg:text-3xl\">{frontmatter.title}</h3>\n                    <div className=\"flex gap-1\">\n                      {frontmatter.tags.map(tag => (\n                        <div key={tag}>\n                          <Link to={`/tags/${tag}`}>\n                            <small className=\"my-1 italic bg-yellow-300 border-amber-300 text-gray-800 badge\">{_.startCase(tag)}</small>\n                          </Link>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"divider lg:divider-horizontal my-0 lg:mx-1\"></div>\n                  <div className=\"flex flex-col justify-center items-end lg:text-right\">\n                    <div className=\"font-edu capitalize\">\n                      {frontmatter.author ? frontmatter.author : meta.author}\n                    </div>\n                    <h5>{frontmatter.date}</h5>\n                  </div>\n                </div>\n                {/* Content */}\n                <div className=\"mx-2\" dangerouslySetInnerHTML={{ __html: html }} />\n              </div>\n\n              {/* Navigation */}\n              <div className=\"mt-12 mx-2 flex justify-between\">\n                <div>\n                  {previous && (\n                    <Link to={`/blog${previous.fields.slug}`}>\n                      <div className=\"flex flex-col items-start link-primary text-neutral\">\n                        <span>&lArr;</span>\n                        <h4>{previous.frontmatter.title}</h4>\n                      </div>\n                    </Link>\n                  )}\n                </div>\n                <div className=\"divider divider-horizontal\"></div>\n                <div>\n                  {next && (\n                    <Link to={`/blog${next.fields.slug}`}>\n                      <div className=\"flex flex-col items-end link-primary text-neutral\">\n                        <span>&rArr;</span>\n                        <h4 className=\"text-right\">{next.frontmatter.title}</h4>\n                      </div>\n                    </Link>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n        {/* Right Sidebar */}\n        <div className=\"col-span-2 mx-2 mt-4 lg:mt-0\">\n          <div>\n            <h3>Tags</h3>\n            <div className=\"grid sm:grid-cols-2\">\n              {Tags}\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <div className=\"mt-8 py-2\">\n        <div className=\"col-span-6 flex justify-center w-full mb-4\">Â© 2022 Samsul Muarrif</div>\n      </div>\n    </div>\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default BlogPost\n\nexport const query = graphql`\n  query BlogQuery($slug: String!) {\n    markdownRemark (fields: { slug: { eq: $slug }}) {\n      html\n      excerpt(pruneLength: 250)\n      frontmatter {\n        date(formatString: \"dddd, Do MMMM YYYY\", locale: \"id-ID\")\n        title\n        author\n        tags\n      }\n    }\n    recentPosts: allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }, limit: 7) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 50)\n          frontmatter {\n            date(formatString: \"dddd, Do MMMM YYYY\", locale: \"id-ID\")            \n            title\n          }\n        }\n      }\n    }\n    tagsPosts: allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n    site {\n      meta: siteMetadata {\n        title\n        author\n      }\n    }\n  }\n`","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["tag","key","fieldValue","className","Link","to","totalCount","post","fields","slug","frontmatter","title","date","excerpt","data","edges","recentPosts","group","tagsPosts","meta","site","markdownRemark","html","pageContext","previous","next","Posts","filter","edge","node","map","id","Tags","Helmet","name","content","tags","author","dangerouslySetInnerHTML","__html","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"sourceRoot":""}